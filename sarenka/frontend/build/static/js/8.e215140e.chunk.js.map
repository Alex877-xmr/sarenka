{"version":3,"sources":["templates/SettingsTemplate.tsx","static/settingsBackground.png","components/atoms/InputWithLabel/InputWithLabel.tsx","views/Settings/SettingsView.tsx","actions/settingsActions.ts"],"names":["StyledWrapper","styled","div","background","StyledContentWrapper","section","StyledLogoWrapper","SettingsTemplate","logo","children","module","exports","StyledLabel","label","theme","colors","font","weight","regular","StyledInput","Input","InputWithLabel","placeholder","name","onChange","defaultValue","htmlFor","type","id","noBorder","onBlur","StyledTokensWrapper","StyledForm","form","SettingsView","useState","censys","API_ID","Secret","shodan","user","api_key","allCredentials","setAllCredentials","onSubmit","event","preventDefault","credentials","axios","post","serverRoutes","userCredentials","then","data","setUserCredentials","response","details","useEffect","get","src","alt","Heading","regularfont","bigFont","as","target","value","Button","small","displayBlock"],"mappings":"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","file":"static/js/8.e215140e.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport background from 'static/settingsBackground.png';\r\n\r\nconst StyledWrapper = styled.div`\r\n  background-image: url(${background});\r\n  background-position: 50% 0;\r\n  background-repeat: no-repeat;\r\n  background-size: 100% 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst StyledContentWrapper = styled.section`\r\n  text-align: left;\r\n  margin: 50px 110px 0 110px;\r\n`;\r\nconst StyledLogoWrapper = styled.div`\r\n  text-align: center;\r\n  padding-top: 50px;\r\n  margin: 0 10px;\r\n`;\r\n\r\ntype Props = {\r\n  logo: React.ReactNode;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst SettingsTemplate = ({ logo, children }: Props) => {\r\n  return (\r\n    <StyledWrapper>\r\n      <StyledLogoWrapper>{logo}</StyledLogoWrapper>\r\n      <StyledContentWrapper>{children}</StyledContentWrapper>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default SettingsTemplate;\r\n","module.exports = __webpack_public_path__ + \"static/media/settingsBackground.2800431f.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport theme from 'theme/theme';\r\nimport Input from 'components/atoms/Input/Input';\r\n\r\nconst StyledLabel = styled.label`\r\n  display: block;\r\n  color: ${theme.colors.font};\r\n  font-weight: ${theme.font.weight.regular};\r\n  margin-bottom: 7px;\r\n`;\r\n\r\nconst StyledInput = styled(Input)`\r\n  max-width: 300px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\ntype Props = {\r\n  label: string;\r\n  placeholder: string;\r\n  name: string;\r\n  defaultValue?: string;\r\n  onChange: (\r\n    event:\r\n      | React.ChangeEvent<HTMLInputElement>\r\n      | React.FocusEvent<HTMLInputElement>,\r\n  ) => void;\r\n};\r\n\r\nconst InputWithLabel: React.FC<Props> = ({\r\n  label,\r\n  placeholder,\r\n  name,\r\n  onChange,\r\n  defaultValue,\r\n}: Props) => (\r\n  <>\r\n    <StyledLabel htmlFor={name}>{label}</StyledLabel>\r\n    <StyledInput\r\n      type=\"text\"\r\n      id={name}\r\n      placeholder={placeholder}\r\n      noBorder\r\n      onChange={onChange}\r\n      onBlur={onChange}\r\n      defaultValue={defaultValue}\r\n    />\r\n  </>\r\n);\r\n\r\nexport default InputWithLabel;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Heading from 'components/atoms/Heading/Heading';\r\nimport logo from 'static/logo.svg';\r\nimport SettingsTemplate from 'templates/SettingsTemplate';\r\nimport styled from 'styled-components';\r\nimport InputWithLabel from 'components/atoms/InputWithLabel/InputWithLabel';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport {\r\n  getUserCredentials,\r\n  setUserCredentials,\r\n} from 'actions/settingsActions';\r\nimport UserCredentialsData from 'interfaces/UserCredentialsData';\r\n\r\nconst StyledTokensWrapper = styled.section`\r\n  margin-left: 40px;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst SettingsView = () => {\r\n  const [allCredentials, setAllCredentials] = useState<UserCredentialsData>({\r\n    censys: {\r\n      API_ID: '',\r\n      Secret: '',\r\n    },\r\n    shodan: {\r\n      user: '',\r\n      api_key: '',\r\n    },\r\n  });\r\n\r\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    setUserCredentials(allCredentials).then((response) => {\r\n      setAllCredentials(response.details);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserCredentials().then((credentials: UserCredentialsData) => {\r\n      setAllCredentials(credentials);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <SettingsTemplate logo={<img src={logo} alt=\"App logo.\" />}>\r\n      <Heading regularfont bigFont>\r\n        Settings\r\n      </Heading>\r\n      <StyledTokensWrapper>\r\n        <Heading as=\"h2\" regularfont>\r\n          Type your user credentials\r\n        </Heading>\r\n        <StyledForm onSubmit={(event) => onSubmit(event)}>\r\n          <InputWithLabel\r\n            name=\"censysAPIID\"\r\n            label=\"censys.io\"\r\n            placeholder=\"Type here your API ID\"\r\n            defaultValue={allCredentials?.censys?.API_ID}\r\n            onChange={(\r\n              event:\r\n                | React.ChangeEvent<HTMLInputElement>\r\n                | React.FocusEvent<HTMLInputElement>,\r\n            ) => {\r\n              setAllCredentials({\r\n                censys: {\r\n                  API_ID: event.target.value,\r\n                  Secret: allCredentials.censys.Secret,\r\n                },\r\n                shodan: {\r\n                  user: allCredentials.shodan.user,\r\n                  api_key: allCredentials.shodan.api_key,\r\n                },\r\n              });\r\n            }}\r\n          />\r\n          <InputWithLabel\r\n            name=\"censysSecret\"\r\n            label=\"censys.io\"\r\n            placeholder=\"Type here your key\"\r\n            defaultValue={allCredentials?.censys?.Secret}\r\n            onChange={(\r\n              event:\r\n                | React.ChangeEvent<HTMLInputElement>\r\n                | React.FocusEvent<HTMLInputElement>,\r\n            ) => {\r\n              setAllCredentials({\r\n                censys: {\r\n                  API_ID: allCredentials.censys.API_ID,\r\n                  Secret: event.target.value,\r\n                },\r\n                shodan: {\r\n                  user: allCredentials.shodan.user,\r\n                  api_key: allCredentials.shodan.api_key,\r\n                },\r\n              });\r\n            }}\r\n          />\r\n          <InputWithLabel\r\n            name=\"shodanUser\"\r\n            label=\"shodan.io\"\r\n            placeholder=\"Type here your username\"\r\n            defaultValue={allCredentials?.shodan?.user}\r\n            onChange={(\r\n              event:\r\n                | React.ChangeEvent<HTMLInputElement>\r\n                | React.FocusEvent<HTMLInputElement>,\r\n            ) => {\r\n              setAllCredentials({\r\n                censys: {\r\n                  API_ID: allCredentials.censys.API_ID,\r\n                  Secret: allCredentials.censys.Secret,\r\n                },\r\n                shodan: {\r\n                  user: event.target.value,\r\n                  api_key: allCredentials.shodan.api_key,\r\n                },\r\n              });\r\n            }}\r\n          />\r\n          <InputWithLabel\r\n            name=\"shodanAPIKEY\"\r\n            label=\"shodan.io\"\r\n            placeholder=\"Type here your API key\"\r\n            defaultValue={allCredentials?.shodan?.api_key}\r\n            onChange={(\r\n              event:\r\n                | React.ChangeEvent<HTMLInputElement>\r\n                | React.FocusEvent<HTMLInputElement>,\r\n            ) => {\r\n              setAllCredentials({\r\n                censys: {\r\n                  API_ID: allCredentials.censys.API_ID,\r\n                  Secret: allCredentials.censys.Secret,\r\n                },\r\n                shodan: {\r\n                  user: allCredentials.shodan.user,\r\n                  api_key: event.target.value,\r\n                },\r\n              });\r\n            }}\r\n          />\r\n          <Button type=\"submit\" small displayBlock>\r\n            Update\r\n          </Button>\r\n        </StyledForm>\r\n      </StyledTokensWrapper>\r\n    </SettingsTemplate>\r\n  );\r\n};\r\n\r\nexport default SettingsView;\r\n","import axios from 'axios';\r\nimport UserCredentialsData from 'interfaces/UserCredentialsData';\r\nimport { serverRoutes } from '../routes';\r\n\r\nexport const getUserCredentials = () => {\r\n  return axios.get(`${serverRoutes.userCredentials}`).then(({ data }) => {\r\n    return data;\r\n  });\r\n};\r\n\r\nexport const setUserCredentials = (allCredentials: UserCredentialsData) => {\r\n  const credentials = {\r\n    'censys.api_id': allCredentials.censys.API_ID,\r\n    'censys.secret': allCredentials.censys.Secret,\r\n    'shodan.user': allCredentials.shodan.user,\r\n    'shodan.api_key': allCredentials.shodan.api_key,\r\n  };\r\n\r\n  return axios\r\n    .post(`${serverRoutes.userCredentials}`, credentials)\r\n    .then(({ data }) => {\r\n      return data;\r\n    });\r\n};\r\n"],"sourceRoot":""}