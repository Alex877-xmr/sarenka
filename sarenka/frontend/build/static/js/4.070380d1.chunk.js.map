{"version":3,"sources":["components/atoms/Paragraph/Paragraph.ts","components/animations/FadeIn.ts","components/atoms/CardWrapper/CardWrapper.ts","templates/VulnerabilityResultTemplate.tsx","static/resultbackground.png","components/atoms/List/ListItem.ts","components/atoms/List/ListWrapper.ts","components/atoms/NoDataText/NoDataText.tsx","components/organisms/HardwareInfoCard/HardwareInfoCard.tsx","views/HardwareInfo/HardwareInfoResult.tsx"],"names":["Paragraph","styled","p","theme","colors","font","bold","weight","regular","wordBreak","listTitle","css","FadeIn","keyframes","CardWrapper","section","StyledWrapper","div","StyledSearchWrapper","background","StyledResultWrapper","article","VulnerabilityResultTemplate","search","result","module","exports","ListItem","li","ListWrapper","ul","StyledSpan","span","NoData","StyledCardWrapper","StyledColumnWrapper","HardwareInfoCard","data","bios","name","version","computer_information","computer_serial_number","mac_address","total_physical_memory","computer_manufacturer","system_type","operation_system","manufacturer","configuration","build_type","os_architecture","motherboard_information","product","serialnumber","HardwareInfoResults","page","useParams","useSelector","hardwareInfo","isLoading","src","logo","alt","Button","onClick","fetchReport","small"],"mappings":"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","file":"static/js/4.070380d1.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\r\nimport theme from 'theme/theme';\r\n\r\ntype Props = {\r\n  bold?: boolean;\r\n  wordBreak?: boolean;\r\n  listTitle?: boolean;\r\n};\r\n\r\nconst Paragraph = styled.p<Props>`\r\n  font-size: 1.7rem;\r\n  color: ${theme.colors.font};\r\n  font-weight: ${({ bold }) =>\r\n    bold ? theme.font.weight.bold : theme.font.weight.regular};\r\n  word-break: ${({ wordBreak }) => (wordBreak ? 'break-all' : 'normal')};\r\n  ${({ listTitle }) =>\r\n    listTitle &&\r\n    css`\r\n      margin-top: 0;\r\n      margin-bottom: 5px;\r\n    `}\r\n`;\r\n\r\nexport default Paragraph;\r\n","import { keyframes } from 'styled-components';\r\n\r\nconst FadeIn = keyframes`\r\n  0%{\r\n    opacity: 0;\r\n  }\r\n  100%{\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport default FadeIn;\r\n","import styled from 'styled-components';\r\nimport FadeIn from 'components/animations/FadeIn';\r\n\r\nconst CardWrapper = styled.section`\r\n  background: #070809;\r\n  border: 1px solid #333333;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  padding: 30px;\r\n  animation: 0.5s ${FadeIn} ease-out forwards;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport default CardWrapper;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport background from 'static/resultbackground.png';\r\n\r\nconst StyledWrapper = styled.div`\r\n  margin-bottom: 140px;\r\n`;\r\n\r\nconst StyledSearchWrapper = styled.section`\r\n  background-image: url(${background});\r\n  background-size: 100% 100%;\r\n  text-align: center;\r\n  padding: 5vh 0;\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst StyledResultWrapper = styled.article`\r\n  margin: 0 50px 50px 50px;\r\n  display: grid;\r\n  grid-gap: 30px;\r\n  @media (max-width: 630px) {\r\n    margin: 0 20px 20px 20px;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  search: React.ReactNode;\r\n  result?: React.ReactNode;\r\n};\r\n\r\nconst VulnerabilityResultTemplate = ({ search, result }: Props) => (\r\n  <StyledWrapper>\r\n    <StyledSearchWrapper>{search}</StyledSearchWrapper>\r\n    <StyledResultWrapper>{result}</StyledResultWrapper>\r\n  </StyledWrapper>\r\n);\r\n\r\nexport default VulnerabilityResultTemplate;\r\n","module.exports = __webpack_public_path__ + \"static/media/resultbackground.063560a4.png\";","import styled from 'styled-components';\r\n\r\nconst ListItem = styled.li`\r\n  word-break: break-all;\r\n  font-size: 1.7rem;\r\n  color: #e0e0e0;\r\n  font-weight: ${({ theme }) => theme.font.weight.regular};\r\n  list-style: none;\r\n  line-height: 2.3rem;\r\n`;\r\n\r\nexport default ListItem;\r\n","import styled from 'styled-components';\r\n\r\nconst ListWrapper = styled.ul`\r\n  margin: 0 0 0 15px;\r\n  padding: 0;\r\n`;\r\n\r\nexport default ListWrapper;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSpan = styled.span`\r\n  color: darkslategray;\r\n  font-style: italic;\r\n`;\r\n\r\nconst NoData = () => <StyledSpan>No data available</StyledSpan>;\r\n\r\nexport default NoData;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CardWrapper from 'components/atoms/CardWrapper/CardWrapper';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\nimport ListWrapper from 'components/atoms/List/ListWrapper';\r\nimport ListItem from 'components/atoms/List/ListItem';\r\nimport NoData from 'components/atoms/NoDataText/NoDataText';\r\nimport HardwareInfoData from 'interfaces/HardwareInfoData';\r\n\r\nconst StyledCardWrapper = styled(CardWrapper)`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-gap: 20px;\r\n  justify-content: center;\r\n\r\n  @media (max-width: 2100px) {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n  @media (max-width: 1800px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n  @media (max-width: 1460px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  @media (max-width: 800px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n`;\r\n\r\nconst StyledColumnWrapper = styled.div``;\r\n\r\ntype Props = {\r\n  data: HardwareInfoData;\r\n};\r\n\r\nconst HardwareInfoCard: React.FC<Props> = ({ data }: Props) => (\r\n  <StyledCardWrapper>\r\n    <StyledColumnWrapper>\r\n      <Paragraph listTitle>BIOS version</Paragraph>\r\n      <ListWrapper>\r\n        <ListItem>\r\n          {`Name: `}\r\n          {data.bios?.name || <NoData />}\r\n        </ListItem>\r\n        <ListItem>\r\n          {`Version: `}\r\n          {data.bios?.version || <NoData />}\r\n        </ListItem>\r\n      </ListWrapper>\r\n    </StyledColumnWrapper>\r\n    <StyledColumnWrapper>\r\n      <Paragraph listTitle>Computer info</Paragraph>\r\n      <ListWrapper>\r\n        <ListItem>\r\n          {`Name: `}\r\n          {data.computer_information?.name || <NoData />}\r\n        </ListItem>\r\n        <ListItem>\r\n          {`Serial number: `}\r\n          {data.computer_information?.computer_serial_number || <NoData />}\r\n        </ListItem>\r\n        <ListItem>\r\n          {`MAC Address: `}\r\n          {data.computer_information?.mac_address || <NoData />}\r\n        </ListItem>\r\n        <ListItem>\r\n          {`Total physical memory: `}\r\n          {data.computer_information?.total_physical_memory || <NoData />}\r\n        </ListItem>\r\n        <ListItem>\r\n          {`Computer manufacturer: `}\r\n          {data.computer_information?.computer_manufacturer || <NoData />}\r\n        </ListItem>\r\n        <ListItem>\r\n          {`System type: `}\r\n          {data.computer_information?.system_type || <NoData />}\r\n        </ListItem>\r\n      </ListWrapper>\r\n    </StyledColumnWrapper>\r\n    <StyledColumnWrapper>\r\n      <Paragraph listTitle>Operation system</Paragraph>\r\n      <ListWrapper>\r\n        <ListItem>\r\n          {`Name: `}\r\n          {data.operation_system?.name || <NoData />}\r\n        </ListItem>\r\n        <ListItem>\r\n          {`Version: `}\r\n          {data.operation_system?.version || <NoData />}\r\n        </ListItem>\r\n        <ListItem>\r\n          {`Manufacturer: `}\r\n          {data.operation_system?.manufacturer || <NoData />}\r\n        </ListItem>\r\n        <ListItem>\r\n          {`Configuration: `}\r\n          {data.operation_system?.configuration || <NoData />}\r\n        </ListItem>\r\n        <ListItem>\r\n          {`Build type: `}\r\n          {data.operation_system?.build_type || <NoData />}\r\n        </ListItem>\r\n        <ListItem>\r\n          {`OS architecture: `}\r\n          {data.operation_system?.os_architecture || <NoData />}\r\n        </ListItem>\r\n      </ListWrapper>\r\n    </StyledColumnWrapper>\r\n    <StyledColumnWrapper>\r\n      <Paragraph listTitle>Motherboard information</Paragraph>\r\n      <ListWrapper>\r\n        <ListItem>\r\n          {`Product: `}\r\n          {data.motherboard_information?.product || <NoData />}\r\n        </ListItem>\r\n        <ListItem>\r\n          {`Manufacturer: `}\r\n          {data.motherboard_information?.manufacturer || <NoData />}\r\n        </ListItem>\r\n        <ListItem>\r\n          {`Version: `}\r\n          {data.motherboard_information?.version || <NoData />}\r\n        </ListItem>\r\n        <ListItem>\r\n          {`Serial number: `}\r\n          {data.motherboard_information?.serialnumber || <NoData />}\r\n        </ListItem>\r\n      </ListWrapper>\r\n    </StyledColumnWrapper>\r\n  </StyledCardWrapper>\r\n);\r\n\r\nexport default HardwareInfoCard;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ResultTemplate from 'templates/VulnerabilityResultTemplate';\r\nimport Loading from 'components/atoms/LoadingAnimation/LoadingAnimation';\r\nimport logo from 'static/logo.svg';\r\nimport { useParams } from 'react-router';\r\nimport HardwareInfoCard from 'components/organisms/HardwareInfoCard/HardwareInfoCard';\r\nimport Button, { ButtonAlignToRight } from 'components/atoms/Button/Button';\r\nimport { fetchReport } from 'actions/hardwareInfoActions';\r\n\r\nconst HardwareInfoResults: React.FC = () => {\r\n  const { page } = useParams();\r\n  const { isLoading, data } = useSelector(\r\n    ({ hardwareInfo }: Record<string, any>) => hardwareInfo[page],\r\n  );\r\n\r\n  const handleReportGenerate = () => {\r\n    return fetchReport();\r\n  };\r\n\r\n  return (\r\n    <ResultTemplate\r\n      search={<img src={logo} alt=\"App logo.\" />}\r\n      result={\r\n        isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <>\r\n            <ButtonAlignToRight>\r\n              <Button onClick={handleReportGenerate} small>\r\n                Generate report\r\n              </Button>\r\n            </ButtonAlignToRight>\r\n            <HardwareInfoCard data={data} />\r\n          </>\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default HardwareInfoResults;\r\n"],"sourceRoot":""}