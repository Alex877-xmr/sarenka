{"version":3,"sources":["components/atoms/Paragraph/Paragraph.ts","components/animations/FadeIn.ts","components/atoms/CardWrapper/CardWrapper.ts","templates/VulnerabilityResultTemplate.tsx","static/resultbackground.png","components/atoms/List/ListItem.ts","components/atoms/List/ListWrapper.ts","components/atoms/NoDataText/NoDataText.tsx","components/atoms/LinkButton/LinkButton.tsx","static/externalLinkIcon.svg","components/organisms/CveSearchResult/CveSearchResult.tsx","components/organisms/CweSearchResult/CweSearchResult.tsx","views/CveSearch/CveSearchResult.tsx"],"names":["Paragraph","styled","p","theme","colors","font","bold","weight","regular","wordBreak","listTitle","css","FadeIn","keyframes","CardWrapper","section","StyledWrapper","div","StyledSearchWrapper","background","StyledResultWrapper","article","VulnerabilityResultTemplate","search","result","module","exports","ListItem","li","ListWrapper","ul","StyledSpan","span","NoData","StyledLink","a","LinkButton","url","href","target","rel","src","linkIcon","alt","StyledParagraphRedBorder","StyledInnerWrapper","StyledParagraph","CveSearchResult","title","cve","cwe","cvss2","cvss2link","cvss3","cvss3link","score","publishedDate","modificationDate","source","hyperlinks","cweLink","description","includes","map","link","index","key","as","CweSearchResult","data","className","ID_CWE","likehood","technical_impact","length","element","caused_by","field","process","dispatch","useDispatch","page","useParams","useSelector","cveSearch","isLoading","error","searchType","useState","searchCve","setSearchCve","Search","handleSubmit","event","searchWord","preventDefault","fetchData","updateTabLabel","setSearchWord","placeholder","pattern","JSON","stringify","Heading","searchTypes","CWE","cwe_title","cwe_mitre_url","cvss2_url","cvss3_url","base_score_v3","base_score_v2","published_date","modified_date","vulnerability_source"],"mappings":"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","file":"static/js/3.bb93a165.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\r\nimport theme from 'theme/theme';\r\n\r\ntype Props = {\r\n  bold?: boolean;\r\n  wordBreak?: boolean;\r\n  listTitle?: boolean;\r\n};\r\n\r\nconst Paragraph = styled.p<Props>`\r\n  font-size: 1.7rem;\r\n  color: ${theme.colors.font};\r\n  font-weight: ${({ bold }) =>\r\n    bold ? theme.font.weight.bold : theme.font.weight.regular};\r\n  word-break: ${({ wordBreak }) => (wordBreak ? 'break-all' : 'normal')};\r\n  ${({ listTitle }) =>\r\n    listTitle &&\r\n    css`\r\n      margin-top: 0;\r\n      margin-bottom: 5px;\r\n    `}\r\n`;\r\n\r\nexport default Paragraph;\r\n","import { keyframes } from 'styled-components';\r\n\r\nconst FadeIn = keyframes`\r\n  0%{\r\n    opacity: 0;\r\n  }\r\n  100%{\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport default FadeIn;\r\n","import styled from 'styled-components';\r\nimport FadeIn from 'components/animations/FadeIn';\r\n\r\nconst CardWrapper = styled.section`\r\n  background: #070809;\r\n  border: 1px solid #333333;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  padding: 30px;\r\n  animation: 0.5s ${FadeIn} ease-out forwards;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport default CardWrapper;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport background from 'static/resultbackground.png';\r\n\r\nconst StyledWrapper = styled.div`\r\n  margin-bottom: 140px;\r\n`;\r\n\r\nconst StyledSearchWrapper = styled.section`\r\n  background-image: url(${background});\r\n  background-size: 100% 100%;\r\n  text-align: center;\r\n  padding: 5vh 0;\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst StyledResultWrapper = styled.article`\r\n  margin: 0 50px 50px 50px;\r\n  display: grid;\r\n  grid-gap: 30px;\r\n  @media (max-width: 630px) {\r\n    margin: 0 20px 20px 20px;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  search: React.ReactNode;\r\n  result?: React.ReactNode;\r\n};\r\n\r\nconst VulnerabilityResultTemplate = ({ search, result }: Props) => (\r\n  <StyledWrapper>\r\n    <StyledSearchWrapper>{search}</StyledSearchWrapper>\r\n    <StyledResultWrapper>{result}</StyledResultWrapper>\r\n  </StyledWrapper>\r\n);\r\n\r\nexport default VulnerabilityResultTemplate;\r\n","module.exports = __webpack_public_path__ + \"static/media/resultbackground.063560a4.png\";","import styled from 'styled-components';\r\n\r\nconst ListItem = styled.li`\r\n  word-break: break-all;\r\n  font-size: 1.7rem;\r\n  color: #e0e0e0;\r\n  font-weight: ${({ theme }) => theme.font.weight.regular};\r\n  list-style: none;\r\n  line-height: 2.3rem;\r\n`;\r\n\r\nexport default ListItem;\r\n","import styled from 'styled-components';\r\n\r\nconst ListWrapper = styled.ul`\r\n  margin: 0 0 0 15px;\r\n  padding: 0;\r\n`;\r\n\r\nexport default ListWrapper;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSpan = styled.span`\r\n  color: darkslategray;\r\n  font-style: italic;\r\n`;\r\n\r\nconst NoData = () => <StyledSpan>No data available</StyledSpan>;\r\n\r\nexport default NoData;\r\n","import React from 'react';\r\nimport linkIcon from 'static/externalLinkIcon.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLink = styled.a`\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n  transform: translateY(4px);\r\n`;\r\n\r\ntype Props = {\r\n  url: string;\r\n};\r\n\r\nconst LinkButton: React.FC<Props> = ({ url }: Props) => (\r\n  <StyledLink href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n    <img src={linkIcon} alt=\"External link.\" />\r\n  </StyledLink>\r\n);\r\n\r\nexport default LinkButton;\r\n","module.exports = __webpack_public_path__ + \"static/media/externalLinkIcon.b87eaf47.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CardWrapper from 'components/atoms/CardWrapper/CardWrapper';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\nimport LinkButton from 'components/atoms/LinkButton/LinkButton';\r\nimport NoData from 'components/atoms/NoDataText/NoDataText';\r\n\r\nconst StyledParagraphRedBorder = styled(Paragraph)`\r\n  max-width: 180px;\r\n  padding: 10px;\r\n  background: #c10c274f;\r\n  transform: translate(-10px, -10px);\r\n  border-radius: 4px;\r\n  white-space: nowrap;\r\n  display: inline-block;\r\n`;\r\n\r\nconst StyledInnerWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  @media (max-width: 930px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  @media (max-width: 540px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n`;\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  white-space: nowrap;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst StyledLink = styled(Paragraph)`\r\n  display: block;\r\n  margin-top: 5px;\r\n`;\r\n\r\ntype Props = {\r\n  title: string;\r\n  cve: string;\r\n  cwe: string;\r\n  cvss2: string;\r\n  cvss2link: string;\r\n  cvss3: string;\r\n  cvss3link: string;\r\n  score: string;\r\n  publishedDate: string;\r\n  modificationDate: string;\r\n  source: string;\r\n  hyperlinks: string[];\r\n  cweLink: string;\r\n  description: string;\r\n};\r\n\r\nconst CveSearchResult: React.FC<Props> = ({\r\n  title,\r\n  cve,\r\n  cwe,\r\n  cvss2,\r\n  cvss2link,\r\n  cvss3,\r\n  cvss3link,\r\n  score,\r\n  publishedDate,\r\n  modificationDate,\r\n  source,\r\n  hyperlinks,\r\n  cweLink,\r\n  description,\r\n}: Props) => {\r\n  return (\r\n    <CardWrapper>\r\n      <StyledInnerWrapper>\r\n        <Paragraph>\r\n          <strong>Title: </strong>\r\n          {title}\r\n        </Paragraph>\r\n        <Paragraph>\r\n          <strong>CVE: </strong>\r\n          {cve}\r\n        </Paragraph>\r\n        <Paragraph>\r\n          <strong>CWE: </strong>\r\n          {cwe}\r\n          {cweLink && <LinkButton url={cweLink} />}\r\n        </Paragraph>\r\n        <StyledParagraph>\r\n          <strong>CVSS 2.0: </strong>\r\n          {cvss2 || <NoData />}\r\n          {cvss2link?.includes('http') && <LinkButton url={cvss2link} />}\r\n        </StyledParagraph>\r\n        <StyledParagraph>\r\n          <strong>CVSS 3.0: </strong>\r\n          {cvss3 || <NoData />}\r\n          {cvss3link?.includes('http') && <LinkButton url={cvss3link} />}\r\n        </StyledParagraph>\r\n        <div>\r\n          <StyledParagraphRedBorder>\r\n            <strong>Score: </strong>\r\n            {score}\r\n          </StyledParagraphRedBorder>\r\n        </div>\r\n        <Paragraph>\r\n          <strong>Published date: </strong>\r\n          {publishedDate}\r\n        </Paragraph>\r\n        <Paragraph>\r\n          <strong>Modification date: </strong>\r\n          {modificationDate}\r\n        </Paragraph>\r\n        <Paragraph>\r\n          <strong>Source: </strong>\r\n          {source}\r\n        </Paragraph>\r\n      </StyledInnerWrapper>\r\n      <Paragraph>\r\n        <strong>Description: </strong>\r\n        {description}\r\n      </Paragraph>\r\n      <Paragraph>\r\n        <strong>Useful links: </strong>\r\n        {hyperlinks?.map((link, index) => {\r\n          return (\r\n            <StyledLink\r\n              key={index}\r\n              as=\"a\"\r\n              href={link}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {link}\r\n            </StyledLink>\r\n          );\r\n        })}\r\n      </Paragraph>\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nexport default CveSearchResult;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CardWrapper from 'components/atoms/CardWrapper/CardWrapper';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\nimport ListWrapper from 'components/atoms/List/ListWrapper';\r\nimport ListItem from 'components/atoms/List/ListItem';\r\nimport CweSearchData from 'interfaces/CweSearchData';\r\n\r\nconst StyledInnerWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 30px;\r\n  grid-template-areas: 'cwe title likehood' 'technicalImpact causedBy causedBy';\r\n  @media (max-width: 950px) {\r\n    grid-template-areas: 'cwe title' 'likehood technicalImpact' 'causedBy causedBy';\r\n  }\r\n  @media (max-width: 540px) {\r\n    grid-template-areas: 'cwe' 'title' 'likehood' 'technicalImpact' 'causedBy';\r\n  }\r\n\r\n  .cwe {\r\n    grid-area: cwe;\r\n  }\r\n  .title {\r\n    grid-area: title;\r\n  }\r\n  .likehood {\r\n    grid-area: likehood;\r\n  }\r\n  .technical-impact {\r\n    grid-area: technicalImpact;\r\n  }\r\n  .caused-by {\r\n    grid-area: causedBy;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  data: CweSearchData;\r\n};\r\n\r\nconst CweSearchResult: React.FC<Props> = ({ data }: Props) => (\r\n  <CardWrapper>\r\n    <StyledInnerWrapper>\r\n      <Paragraph className=\"cwe\">\r\n        <strong>CWE: </strong>\r\n        {data.ID_CWE}\r\n      </Paragraph>\r\n      <Paragraph className=\"title\">\r\n        <strong>Title: </strong>\r\n        {data.title}\r\n      </Paragraph>\r\n      <Paragraph className=\"likehood\">\r\n        <strong>Likehood: </strong>\r\n        {data.likehood}\r\n      </Paragraph>\r\n      <Paragraph as=\"div\" className=\"technical-impact\">\r\n        <strong>Technical impact: </strong>\r\n        {data.technical_impact.length <= 1 ? (\r\n          data.technical_impact?.[0]\r\n        ) : (\r\n          <ListWrapper>\r\n            {data.technical_impact.map((element, index) => (\r\n              <ListItem key={index}>{element}</ListItem>\r\n            ))}\r\n          </ListWrapper>\r\n        )}\r\n      </Paragraph>\r\n      <Paragraph as=\"div\" className=\"caused-by\">\r\n        <strong>Caused by: </strong>\r\n        <ListWrapper>\r\n          <ListItem>\r\n            <Paragraph as=\"span\">\r\n              <strong>Field: </strong>\r\n              {data.caused_by?.field}\r\n            </Paragraph>\r\n          </ListItem>\r\n          <ListItem>\r\n            <Paragraph as=\"span\">\r\n              <strong>Process: </strong>\r\n              {data.caused_by?.process}\r\n            </Paragraph>\r\n          </ListItem>\r\n          <ListItem>\r\n            <Paragraph as=\"span\">\r\n              <strong>Description: </strong>\r\n              {data.caused_by?.description}\r\n            </Paragraph>\r\n          </ListItem>\r\n        </ListWrapper>\r\n      </Paragraph>\r\n    </StyledInnerWrapper>\r\n    <Paragraph>\r\n      <strong>Description: </strong>\r\n      {data.description}\r\n    </Paragraph>\r\n  </CardWrapper>\r\n);\r\n\r\nexport default CweSearchResult;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchData, searchTypes } from 'actions/cveSearchActions';\r\nimport ResultTemplate from 'templates/VulnerabilityResultTemplate';\r\nimport SearchResultCVE from 'components/organisms/CveSearchResult/CveSearchResult';\r\nimport Loading from 'components/atoms/LoadingAnimation/LoadingAnimation';\r\nimport Search from 'components/molecules/Search/Search';\r\nimport Heading from 'components/atoms/Heading/Heading';\r\nimport { useParams } from 'react-router';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\nimport { updateTabLabel } from 'actions/TabsActions';\r\nimport CweSearchResult from '../../components/organisms/CweSearchResult/CweSearchResult';\r\n\r\nconst CveSearchResult = () => {\r\n  const dispatch = useDispatch();\r\n  const { page } = useParams();\r\n  const { isLoading, data, error, searchType } = useSelector(\r\n    ({ cveSearch }: Record<string, any>) => cveSearch[page],\r\n  );\r\n\r\n  const [searchCve, setSearchCve] = useState(data?.cve || '');\r\n\r\n  const handleSubmit = (\r\n    event: React.FormEvent<HTMLFormElement>,\r\n    searchWord: string,\r\n  ) => {\r\n    event.preventDefault();\r\n    dispatch(fetchData(searchWord, page));\r\n    dispatch(updateTabLabel(searchCve, page));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ResultTemplate\r\n        search={\r\n          <Search\r\n            handleSubmit={handleSubmit}\r\n            searchWord={searchCve}\r\n            setSearchWord={setSearchCve}\r\n            title=\"Search information about specific CVE or CWE\"\r\n            placeholder=\"Type CVE or CWE number e.g CVE-2010-3333, CWE-246\"\r\n            pattern=\"((CVE|cve)-\\d{4}-\\d+)|((CWE|cwe)-\\d+)\"\r\n          />\r\n        }\r\n        result={\r\n          isLoading ? (\r\n            <Loading />\r\n          ) : (\r\n            <>\r\n              {JSON.stringify(data) !== '{}' && !error ? (\r\n                searchTypes.CWE === searchType ? (\r\n                  <CweSearchResult data={data} />\r\n                ) : (\r\n                  <SearchResultCVE\r\n                    title={data.cwe?.cwe_title}\r\n                    cve={data.cve}\r\n                    cwe={data.cwe?.ID_CWE}\r\n                    cweLink={data.cwe?.[0]?.cwe_mitre_url}\r\n                    cvss2={data.cvss2?.cvss2}\r\n                    cvss2link={data.cvss2?.cvss2_url}\r\n                    cvss3={data.cvss3?.cvss3}\r\n                    cvss3link={data.cvss3?.cvss3_url}\r\n                    score={\r\n                      data.base_score_v3\r\n                        ? data.base_score_v3\r\n                        : data.base_score_v2\r\n                    }\r\n                    publishedDate={data.published_date}\r\n                    modificationDate={data.modified_date}\r\n                    source={data.vulnerability_source}\r\n                    hyperlinks={data.hyperlinks}\r\n                    description={data.description}\r\n                  />\r\n                )\r\n              ) : (\r\n                <>\r\n                  <Heading as=\"h3\">No result found</Heading>\r\n                  <Paragraph>{error}</Paragraph>\r\n                </>\r\n              )}\r\n            </>\r\n          )\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CveSearchResult;\r\n"],"sourceRoot":""}